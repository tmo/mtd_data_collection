        ___
       __H__
 ___ ___["]_____ ___ ___  {1.4.7#stable}
|_ -| . [(]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 00:48:05 /2021-07-15/

[00:48:05] [WARNING] using '/home/kali/Documents/project/mtd_full_attack/results/20210715/testing_full_attack/sqlmap_out_20210715_044805' as the output directory
[00:48:05] [INFO] testing connection to the target URL
[00:48:05] [INFO] checking if the target is protected by some kind of WAF/IPS
[00:48:05] [CRITICAL] heuristics detected that the target is protected by some kind of WAF/IPS
are you sure that you want to continue with further target testing? [Y/n] Y
[00:48:05] [WARNING] please consider usage of tamper scripts (option '--tamper')
[00:48:05] [INFO] testing if the target URL content is stable
[00:48:06] [INFO] target URL content is stable
[00:48:06] [INFO] testing if GET parameter 'id' is dynamic
[00:48:06] [WARNING] GET parameter 'id' does not appear to be dynamic
[00:48:06] [INFO] heuristic (basic) test shows that GET parameter 'id' might be injectable (possible DBMS: 'MySQL')
[00:48:06] [INFO] testing for SQL injection on GET parameter 'id'
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] Y
[00:48:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[00:48:06] [WARNING] reflective value(s) found and filtering out
[00:48:06] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[00:48:07] [INFO] testing 'Generic inline queries'
[00:48:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[00:48:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[00:48:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[00:48:10] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[00:48:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[00:48:15] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[00:48:17] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[00:48:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[00:48:22] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[00:48:24] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[00:48:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[00:48:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[00:48:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[00:48:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[00:48:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[00:48:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[00:48:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[00:48:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[00:48:27] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[00:48:27] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[00:48:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[00:48:29] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[00:48:29] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[00:48:31] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[00:48:33] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[00:48:34] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[00:48:36] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[00:48:38] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[00:48:40] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[00:48:42] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[00:48:44] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[00:48:46] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[00:48:47] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[00:48:49] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[00:48:51] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[00:48:53] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[00:48:55] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[00:48:55] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[00:48:57] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[00:48:57] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[00:48:57] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[00:48:57] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[00:48:57] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[00:48:57] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[00:48:57] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[00:48:57] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[00:48:57] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[00:48:57] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[00:48:57] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[00:48:57] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[00:48:57] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[00:48:57] [INFO] testing 'MySQL inline queries'
[00:48:57] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[00:48:58] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[00:48:59] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[00:49:00] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[00:49:01] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[00:49:02] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[00:49:03] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[00:49:05] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[00:49:06] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[00:49:08] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[00:49:09] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[00:49:10] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[00:49:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[00:49:12] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[00:49:13] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query)'
[00:49:15] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (heavy query)'
[00:49:16] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query - comment)'
[00:49:17] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (heavy query - comment)'
[00:49:18] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[00:49:20] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[00:49:21] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[00:49:22] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[00:49:23] [INFO] testing 'MySQL AND time-based blind (ELT)'
[00:49:25] [INFO] testing 'MySQL OR time-based blind (ELT)'
[00:49:26] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[00:49:27] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[00:49:28] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[00:49:29] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[00:49:30] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[00:49:30] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[00:49:30] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (heavy queries)'
[00:49:30] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[00:49:30] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[00:49:30] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[00:49:30] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[00:49:30] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[00:49:30] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[00:49:31] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[00:49:32] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[00:49:33] [WARNING] GET parameter 'id' does not seem to be injectable
[00:49:33] [INFO] testing if GET parameter 'Submit' is dynamic
[00:49:33] [WARNING] GET parameter 'Submit' does not appear to be dynamic
[00:49:33] [WARNING] heuristic (basic) test shows that GET parameter 'Submit' might not be injectable
[00:49:33] [INFO] testing for SQL injection on GET parameter 'Submit'
[00:49:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[00:49:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[00:49:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[00:49:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[00:49:37] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[00:49:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[00:49:40] [WARNING] user aborted during detection phase
how do you want to proceed? [(S)kip current test/(e)nd detection phase/(n)ext parameter/(c)hange verbosity/(q)uit] 
[00:49:41] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[00:49:43] [WARNING] user aborted during detection phase
how do you want to proceed? [(S)kip current test/(e)nd detection phase/(n)ext parameter/(c)hange verbosity/(q)uit] 
[00:49:43] [WARNING] you haven't updated sqlmap for more than 378 days!!!

[*] ending @ 00:49:43 /2021-07-15/

